<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="20" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Test_Automation_2020" duration-ms="20834" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:54Z">
    <groups>
    </groups>
    <test name="Book Flight for 4 Passengers" duration-ms="20621" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:53Z">
      <class name="testcases.SanityTest">
        <test-method status="PASS" signature="suiteSetUp()[pri:0, instance:testcases.SanityTest@7dc7cbad]" name="suiteSetUp" is-config="true" duration-ms="10430" started-at="2020-04-13T18:32:22Z" finished-at="2020-04-13T18:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetUp -->
        <test-method status="PASS" signature="beforeEachTestClass(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@7dc7cbad]" name="beforeEachTestClass" is-config="true" duration-ms="2172" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$2338 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestClass -->
        <test-method status="PASS" signature="setUp_Parameters(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@7dc7cbad]" name="setUp_Parameters" is-config="true" duration-ms="1" started-at="2020-04-13T18:32:35Z" depends-on-methods="base.TestBase.beforeEachTestClass" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$2338 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Parameters -->
        <test-method status="PASS" signature="open_Registration()[pri:1, instance:testcases.SanityTest@7dc7cbad]" name="open_Registration" duration-ms="3471" started-at="2020-04-13T18:32:35Z" finished-at="2020-04-13T18:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open_Registration -->
        <test-method status="PASS" signature="user_Registration()[pri:2, instance:testcases.SanityTest@7dc7cbad]" name="user_Registration" duration-ms="8759" started-at="2020-04-13T18:32:38Z" finished-at="2020-04-13T18:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_Registration -->
        <test-method status="PASS" signature="confirm_User_Registration()[pri:3, instance:testcases.SanityTest@7dc7cbad]" name="confirm_User_Registration" duration-ms="1211" started-at="2020-04-13T18:32:47Z" finished-at="2020-04-13T18:32:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirm_User_Registration -->
        <test-method status="PASS" signature="flight_Reservation()[pri:4, instance:testcases.SanityTest@7dc7cbad]" name="flight_Reservation" duration-ms="3559" started-at="2020-04-13T18:32:48Z" finished-at="2020-04-13T18:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Reservation -->
        <test-method status="PASS" signature="flight_Confirmation()[pri:5, instance:testcases.SanityTest@7dc7cbad]" name="flight_Confirmation" duration-ms="1356" started-at="2020-04-13T18:32:52Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Confirmation -->
        <test-method status="PASS" signature="afterEachTestCase()[pri:0, instance:testcases.SanityTest@7dc7cbad]" name="afterEachTestCase" is-config="true" duration-ms="64" started-at="2020-04-13T18:32:53Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestCase -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.SanityTest@7dc7cbad]" name="tearDown" is-config="true" duration-ms="5005" started-at="2020-04-13T18:32:54Z" finished-at="2020-04-13T18:32:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.SanityTest -->
    </test> <!-- Book Flight for 4 Passengers -->
    <test name="Book Flight for 2 Passengers" duration-ms="20834" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:54Z">
      <class name="testcases.SanityTest">
        <test-method status="PASS" signature="beforeEachTestClass(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@100fc185]" name="beforeEachTestClass" is-config="true" duration-ms="2154" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$1169 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestClass -->
        <test-method status="PASS" signature="setUp_Parameters(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@100fc185]" name="setUp_Parameters" is-config="true" duration-ms="0" started-at="2020-04-13T18:32:35Z" depends-on-methods="base.TestBase.beforeEachTestClass" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$1169 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Parameters -->
        <test-method status="PASS" signature="open_Registration()[pri:1, instance:testcases.SanityTest@100fc185]" name="open_Registration" duration-ms="3407" started-at="2020-04-13T18:32:35Z" finished-at="2020-04-13T18:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open_Registration -->
        <test-method status="PASS" signature="user_Registration()[pri:2, instance:testcases.SanityTest@100fc185]" name="user_Registration" duration-ms="8953" started-at="2020-04-13T18:32:38Z" finished-at="2020-04-13T18:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_Registration -->
        <test-method status="PASS" signature="confirm_User_Registration()[pri:3, instance:testcases.SanityTest@100fc185]" name="confirm_User_Registration" duration-ms="1224" started-at="2020-04-13T18:32:47Z" finished-at="2020-04-13T18:32:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirm_User_Registration -->
        <test-method status="PASS" signature="flight_Reservation()[pri:4, instance:testcases.SanityTest@100fc185]" name="flight_Reservation" duration-ms="3591" started-at="2020-04-13T18:32:48Z" finished-at="2020-04-13T18:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Reservation -->
        <test-method status="PASS" signature="flight_Confirmation()[pri:5, instance:testcases.SanityTest@100fc185]" name="flight_Confirmation" duration-ms="1397" started-at="2020-04-13T18:32:52Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Confirmation -->
        <test-method status="PASS" signature="afterEachTestCase()[pri:0, instance:testcases.SanityTest@100fc185]" name="afterEachTestCase" is-config="true" duration-ms="64" started-at="2020-04-13T18:32:53Z" finished-at="2020-04-13T18:32:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestCase -->
      </class> <!-- testcases.SanityTest -->
    </test> <!-- Book Flight for 2 Passengers -->
    <test name="Book Flight for 1 Passenger" duration-ms="20767" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:53Z">
      <class name="testcases.SanityTest">
        <test-method status="PASS" signature="beforeEachTestClass(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@b97c004]" name="beforeEachTestClass" is-config="true" duration-ms="2167" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$584 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestClass -->
        <test-method status="PASS" signature="setUp_Parameters(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@b97c004]" name="setUp_Parameters" is-config="true" duration-ms="0" started-at="2020-04-13T18:32:35Z" depends-on-methods="base.TestBase.beforeEachTestClass" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$584 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Parameters -->
        <test-method status="PASS" signature="open_Registration()[pri:1, instance:testcases.SanityTest@b97c004]" name="open_Registration" duration-ms="3389" started-at="2020-04-13T18:32:35Z" finished-at="2020-04-13T18:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open_Registration -->
        <test-method status="PASS" signature="user_Registration()[pri:2, instance:testcases.SanityTest@b97c004]" name="user_Registration" duration-ms="9061" started-at="2020-04-13T18:32:38Z" finished-at="2020-04-13T18:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_Registration -->
        <test-method status="PASS" signature="confirm_User_Registration()[pri:3, instance:testcases.SanityTest@b97c004]" name="confirm_User_Registration" duration-ms="1210" started-at="2020-04-13T18:32:47Z" finished-at="2020-04-13T18:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirm_User_Registration -->
        <test-method status="PASS" signature="flight_Reservation()[pri:4, instance:testcases.SanityTest@b97c004]" name="flight_Reservation" duration-ms="3523" started-at="2020-04-13T18:32:49Z" finished-at="2020-04-13T18:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Reservation -->
        <test-method status="PASS" signature="flight_Confirmation()[pri:5, instance:testcases.SanityTest@b97c004]" name="flight_Confirmation" duration-ms="1326" started-at="2020-04-13T18:32:52Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Confirmation -->
        <test-method status="PASS" signature="afterEachTestCase()[pri:0, instance:testcases.SanityTest@b97c004]" name="afterEachTestCase" is-config="true" duration-ms="59" started-at="2020-04-13T18:32:53Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestCase -->
      </class> <!-- testcases.SanityTest -->
    </test> <!-- Book Flight for 1 Passenger -->
    <test name="Book Flight for 3 Passengers" duration-ms="20675" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:53Z">
      <class name="testcases.SanityTest">
        <test-method status="PASS" signature="beforeEachTestClass(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@51081592]" name="beforeEachTestClass" is-config="true" duration-ms="2154" started-at="2020-04-13T18:32:33Z" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$1753 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestClass -->
        <test-method status="PASS" signature="setUp_Parameters(java.lang.String, java.lang.String)[pri:0, instance:testcases.SanityTest@51081592]" name="setUp_Parameters" is-config="true" duration-ms="0" started-at="2020-04-13T18:32:35Z" depends-on-methods="base.TestBase.beforeEachTestClass" finished-at="2020-04-13T18:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$1753 USD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp_Parameters -->
        <test-method status="PASS" signature="open_Registration()[pri:1, instance:testcases.SanityTest@51081592]" name="open_Registration" duration-ms="3300" started-at="2020-04-13T18:32:35Z" finished-at="2020-04-13T18:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open_Registration -->
        <test-method status="PASS" signature="user_Registration()[pri:2, instance:testcases.SanityTest@51081592]" name="user_Registration" duration-ms="9001" started-at="2020-04-13T18:32:38Z" finished-at="2020-04-13T18:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_Registration -->
        <test-method status="PASS" signature="confirm_User_Registration()[pri:3, instance:testcases.SanityTest@51081592]" name="confirm_User_Registration" duration-ms="1209" started-at="2020-04-13T18:32:47Z" finished-at="2020-04-13T18:32:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirm_User_Registration -->
        <test-method status="PASS" signature="flight_Reservation()[pri:4, instance:testcases.SanityTest@51081592]" name="flight_Reservation" duration-ms="3560" started-at="2020-04-13T18:32:48Z" finished-at="2020-04-13T18:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Reservation -->
        <test-method status="PASS" signature="flight_Confirmation()[pri:5, instance:testcases.SanityTest@51081592]" name="flight_Confirmation" duration-ms="1338" started-at="2020-04-13T18:32:52Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight_Confirmation -->
        <test-method status="PASS" signature="afterEachTestCase()[pri:0, instance:testcases.SanityTest@51081592]" name="afterEachTestCase" is-config="true" duration-ms="62" started-at="2020-04-13T18:32:53Z" finished-at="2020-04-13T18:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestCase -->
      </class> <!-- testcases.SanityTest -->
    </test> <!-- Book Flight for 3 Passengers -->
  </suite> <!-- Test_Automation_2020 -->
</testng-results>
